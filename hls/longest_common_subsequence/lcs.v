// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lcs,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a75ti-ftg256-1L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.359000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1215,HLS_SYN_LUT=1930,HLS_VERSION=2019_2}" *)

module lcs (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_in_address0,
        data_in_ce0,
        data_in_q0,
        data_out_address0,
        data_out_ce0,
        data_out_we0,
        data_out_d0,
        n,
        m
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] data_in_address0;
output   data_in_ce0;
input  [7:0] data_in_q0;
output  [2:0] data_out_address0;
output   data_out_ce0;
output   data_out_we0;
output  [7:0] data_out_d0;
input  [31:0] n;
input  [31:0] m;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] data_in_address0;
reg data_in_ce0;
reg[2:0] data_out_address0;
reg data_out_ce0;
reg data_out_we0;
reg[7:0] data_out_d0;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] trace_address0;
reg    trace_ce0;
reg    trace_we0;
wire   [6:0] trace_q0;
wire   [30:0] i_fu_345_p2;
reg   [30:0] i_reg_709;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln10_fu_351_p1;
reg   [63:0] zext_ln10_reg_714;
wire   [0:0] icmp_ln9_fu_340_p2;
wire   [30:0] i_4_fu_365_p2;
reg   [30:0] i_4_reg_727;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln13_fu_360_p2;
wire   [31:0] i_5_fu_391_p2;
reg   [31:0] i_5_reg_740;
wire    ap_CS_fsm_state6;
wire   [6:0] sub_ln24_fu_413_p2;
reg   [6:0] sub_ln24_reg_745;
wire   [0:0] icmp_ln22_fu_386_p2;
wire   [31:0] j_fu_424_p2;
wire    ap_CS_fsm_state7;
wire   [31:0] add_ln30_fu_449_p2;
reg   [31:0] add_ln30_reg_761;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln28_fu_444_p2;
wire   [6:0] trunc_ln30_fu_480_p1;
reg   [6:0] trunc_ln30_reg_772;
wire    ap_CS_fsm_state9;
wire  signed [36:0] sext_ln30_fu_484_p1;
reg  signed [36:0] sext_ln30_reg_777;
wire   [35:0] sub_ln36_fu_504_p2;
reg   [35:0] sub_ln36_reg_782;
wire   [6:0] trunc_ln36_fu_510_p1;
reg   [6:0] trunc_ln36_reg_787;
wire   [7:0] seq0_q0;
reg   [7:0] seq0_load_reg_792;
wire  signed [35:0] add_ln30_3_fu_538_p2;
reg  signed [35:0] add_ln30_3_reg_800;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln29_fu_514_p2;
reg   [5:0] alnmat_addr_4_reg_806;
wire   [31:0] i_7_fu_553_p2;
wire  signed [36:0] add_ln30_2_fu_563_p2;
reg  signed [36:0] add_ln30_2_reg_821;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln31_fu_577_p2;
reg   [0:0] icmp_ln31_reg_836;
wire   [31:0] alnmat_q0;
reg   [31:0] alnmat_load_1_reg_840;
wire    ap_CS_fsm_state12;
wire   [31:0] alnmat_q1;
reg   [31:0] alnmat_load_3_reg_845;
wire   [36:0] select_ln87_fu_591_p3;
reg   [36:0] select_ln87_reg_850;
wire    ap_CS_fsm_state13;
reg   [5:0] trace_addr_reg_860;
wire    ap_CS_fsm_state14;
reg   [5:0] alnmat_addr_3_reg_865;
reg   [31:0] alnmat_load_4_reg_871;
wire   [31:0] add_ln32_1_fu_617_p2;
reg   [31:0] add_ln32_1_reg_877;
wire    ap_CS_fsm_state15;
wire   [6:0] select_ln37_fu_644_p3;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln35_fu_634_p2;
wire   [31:0] j_4_fu_652_p2;
reg   [31:0] j_4_reg_891;
wire   [31:0] grp_trace_back_fu_326_ap_return;
reg  signed [31:0] len_reg_896;
wire    ap_CS_fsm_state20;
wire    grp_trace_back_fu_326_ap_ready;
wire    grp_trace_back_fu_326_ap_done;
wire   [31:0] i_6_fu_663_p2;
reg   [31:0] i_6_reg_902;
wire    ap_CS_fsm_state21;
wire   [31:0] j_3_fu_675_p2;
reg   [31:0] j_3_reg_910;
wire   [0:0] icmp_ln49_fu_669_p2;
reg   [2:0] seq0_address0;
reg    seq0_ce0;
reg    seq0_we0;
reg   [2:0] seq1_address0;
reg    seq1_ce0;
reg    seq1_we0;
wire   [7:0] seq1_q0;
reg   [2:0] subseq_address0;
reg    subseq_ce0;
reg    subseq_we0;
wire   [7:0] subseq_q0;
reg   [5:0] alnmat_address0;
reg    alnmat_ce0;
reg    alnmat_we0;
reg   [31:0] alnmat_d0;
reg   [5:0] alnmat_address1;
reg    alnmat_ce1;
wire    grp_trace_back_fu_326_ap_start;
wire    grp_trace_back_fu_326_ap_idle;
wire   [2:0] grp_trace_back_fu_326_seq0_address0;
wire    grp_trace_back_fu_326_seq0_ce0;
wire   [2:0] grp_trace_back_fu_326_subseq_address0;
wire    grp_trace_back_fu_326_subseq_ce0;
wire    grp_trace_back_fu_326_subseq_we0;
wire   [7:0] grp_trace_back_fu_326_subseq_d0;
wire   [5:0] grp_trace_back_fu_326_trace_address0;
wire    grp_trace_back_fu_326_trace_ce0;
reg   [30:0] i_0_reg_236;
wire    ap_CS_fsm_state3;
reg   [30:0] i_1_reg_247;
wire    ap_CS_fsm_state5;
reg   [31:0] i_2_reg_259;
wire   [0:0] icmp_ln23_fu_419_p2;
reg   [31:0] j_0_reg_270;
reg  signed [31:0] i_3_reg_281;
reg  signed [31:0] j_1_reg_293;
wire    ap_CS_fsm_state19;
reg   [6:0] storemerge_reg_305;
reg   [31:0] i_4_in_reg_317;
wire    ap_CS_fsm_state22;
reg    grp_trace_back_fu_326_ap_start_reg;
wire  signed [63:0] sext_ln14_fu_376_p1;
wire   [63:0] zext_ln14_fu_381_p1;
wire  signed [63:0] sext_ln24_fu_439_p1;
wire   [63:0] zext_ln30_fu_455_p1;
wire  signed [63:0] sext_ln32_fu_548_p1;
wire   [63:0] zext_ln30_1_fu_525_p1;
wire  signed [63:0] sext_ln30_1_fu_568_p1;
wire  signed [63:0] sext_ln30_3_fu_573_p1;
wire  signed [63:0] sext_ln87_fu_598_p1;
wire  signed [63:0] sext_ln36_3_fu_611_p1;
wire  signed [63:0] sext_ln48_fu_658_p1;
wire   [63:0] zext_ln51_fu_680_p1;
wire  signed [63:0] sext_ln51_fu_685_p1;
wire    ap_CS_fsm_state16;
wire   [31:0] select_ln87_1_fu_627_p3;
wire    ap_CS_fsm_state17;
wire   [31:0] zext_ln9_fu_336_p1;
wire   [31:0] zext_ln13_fu_356_p1;
wire   [31:0] add_ln14_fu_371_p2;
wire   [3:0] trunc_ln24_1_fu_401_p1;
wire   [6:0] sext_ln24_2_cast_fu_405_p3;
wire   [6:0] trunc_ln24_fu_397_p1;
wire   [6:0] trunc_ln24_2_fu_430_p1;
wire   [6:0] add_ln24_fu_434_p2;
wire   [34:0] tmp_1_fu_463_p3;
wire   [35:0] zext_ln30_3_fu_470_p1;
wire   [35:0] zext_ln30_2_fu_460_p1;
wire  signed [35:0] sub_ln30_fu_474_p2;
wire   [34:0] tmp_2_fu_492_p3;
wire  signed [35:0] sext_ln36_1_fu_500_p1;
wire  signed [35:0] sext_ln36_fu_488_p1;
wire   [31:0] add_ln30_1_fu_519_p2;
wire   [35:0] zext_ln30_4_fu_534_p1;
wire   [6:0] trunc_ln30_1_fu_530_p1;
wire   [6:0] add_ln32_fu_543_p2;
wire  signed [36:0] sext_ln36_2_fu_559_p1;
wire   [0:0] icmp_ln87_fu_585_p2;
wire  signed [36:0] sext_ln30_2_fu_582_p1;
wire   [6:0] trunc_ln36_1_fu_602_p1;
wire   [6:0] add_ln36_fu_606_p2;
wire   [0:0] icmp_ln87_1_fu_623_p2;
wire   [0:0] icmp_ln37_fu_639_p2;
wire  signed [31:0] sext_ln48_fu_658_p0;
reg   [21:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 grp_trace_back_fu_326_ap_start_reg = 1'b0;
end

lcs_trace #(
    .DataWidth( 7 ),
    .AddressRange( 56 ),
    .AddressWidth( 6 ))
trace_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(trace_address0),
    .ce0(trace_ce0),
    .we0(trace_we0),
    .d0(storemerge_reg_305),
    .q0(trace_q0)
);

lcs_seq0 #(
    .DataWidth( 8 ),
    .AddressRange( 7 ),
    .AddressWidth( 3 ))
seq0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(seq0_address0),
    .ce0(seq0_ce0),
    .we0(seq0_we0),
    .d0(data_in_q0),
    .q0(seq0_q0)
);

lcs_seq1 #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
seq1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(seq1_address0),
    .ce0(seq1_ce0),
    .we0(seq1_we0),
    .d0(data_in_q0),
    .q0(seq1_q0)
);

lcs_subseq #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
subseq_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(subseq_address0),
    .ce0(subseq_ce0),
    .we0(subseq_we0),
    .d0(grp_trace_back_fu_326_subseq_d0),
    .q0(subseq_q0)
);

lcs_alnmat #(
    .DataWidth( 32 ),
    .AddressRange( 56 ),
    .AddressWidth( 6 ))
alnmat_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alnmat_address0),
    .ce0(alnmat_ce0),
    .we0(alnmat_we0),
    .d0(alnmat_d0),
    .q0(alnmat_q0),
    .address1(alnmat_address1),
    .ce1(alnmat_ce1),
    .q1(alnmat_q1)
);

trace_back grp_trace_back_fu_326(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_trace_back_fu_326_ap_start),
    .ap_done(grp_trace_back_fu_326_ap_done),
    .ap_idle(grp_trace_back_fu_326_ap_idle),
    .ap_ready(grp_trace_back_fu_326_ap_ready),
    .n(n),
    .m(m),
    .seq0_address0(grp_trace_back_fu_326_seq0_address0),
    .seq0_ce0(grp_trace_back_fu_326_seq0_ce0),
    .seq0_q0(seq0_q0),
    .subseq_address0(grp_trace_back_fu_326_subseq_address0),
    .subseq_ce0(grp_trace_back_fu_326_subseq_ce0),
    .subseq_we0(grp_trace_back_fu_326_subseq_we0),
    .subseq_d0(grp_trace_back_fu_326_subseq_d0),
    .trace_address0(grp_trace_back_fu_326_trace_address0),
    .trace_ce0(grp_trace_back_fu_326_trace_ce0),
    .trace_q0(trace_q0),
    .ap_return(grp_trace_back_fu_326_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_trace_back_fu_326_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln28_fu_444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
            grp_trace_back_fu_326_ap_start_reg <= 1'b1;
        end else if ((grp_trace_back_fu_326_ap_ready == 1'b1)) begin
            grp_trace_back_fu_326_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_236 <= i_reg_709;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_236 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_340_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_247 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_1_reg_247 <= i_4_reg_727;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_2_reg_259 <= 32'd0;
    end else if (((icmp_ln23_fu_419_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_2_reg_259 <= i_5_reg_740;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_386_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_3_reg_281 <= 32'd1;
    end else if (((icmp_ln29_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_3_reg_281 <= i_7_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_4_in_reg_317 <= i_6_reg_902;
    end else if (((grp_trace_back_fu_326_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        i_4_in_reg_317 <= grp_trace_back_fu_326_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln22_fu_386_p2 == 1'd0))) begin
        j_0_reg_270 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln23_fu_419_p2 == 1'd0))) begin
        j_0_reg_270 <= j_fu_424_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j_1_reg_293 <= 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        j_1_reg_293 <= j_4_reg_891;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((icmp_ln35_fu_634_p2 == 1'd1)) begin
                        storemerge_reg_305[0] <= 1'b1;
            storemerge_reg_305[3] <= 1'b0;
            storemerge_reg_305[4] <= 1'b1;
        end else if ((icmp_ln35_fu_634_p2 == 1'd0)) begin
                        storemerge_reg_305[0] <= select_ln37_fu_644_p3[0];
            storemerge_reg_305[4 : 3] <= select_ln37_fu_644_p3[4 : 3];
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln30_2_reg_821 <= add_ln30_2_fu_563_p2;
        icmp_ln31_reg_836 <= icmp_ln31_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln29_fu_514_p2 == 1'd0))) begin
        add_ln30_3_reg_800 <= add_ln30_3_fu_538_p2;
        alnmat_addr_4_reg_806 <= sext_ln32_fu_548_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln28_fu_444_p2 == 1'd0))) begin
        add_ln30_reg_761 <= add_ln30_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln32_1_reg_877 <= add_ln32_1_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        alnmat_addr_3_reg_865 <= sext_ln36_3_fu_611_p1;
        alnmat_load_4_reg_871 <= alnmat_q1;
        trace_addr_reg_860 <= sext_ln36_3_fu_611_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        alnmat_load_1_reg_840 <= alnmat_q0;
        alnmat_load_3_reg_845 <= alnmat_q1;
        select_ln87_reg_850 <= select_ln87_fu_591_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_4_reg_727 <= i_4_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_5_reg_740 <= i_5_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_6_reg_902 <= i_6_fu_663_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_709 <= i_fu_345_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln49_fu_669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        j_3_reg_910 <= j_3_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j_4_reg_891 <= j_4_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_trace_back_fu_326_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        len_reg_896 <= grp_trace_back_fu_326_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        seq0_load_reg_792 <= seq0_q0;
        sext_ln30_reg_777 <= sext_ln30_fu_484_p1;
        sub_ln36_reg_782 <= sub_ln36_fu_504_p2;
        trunc_ln30_reg_772 <= trunc_ln30_fu_480_p1;
        trunc_ln36_reg_787 <= trunc_ln36_fu_510_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln22_fu_386_p2 == 1'd0))) begin
        sub_ln24_reg_745 <= sub_ln24_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_340_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln10_reg_714[30 : 0] <= zext_ln10_fu_351_p1[30 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        alnmat_address0 = alnmat_addr_3_reg_865;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        alnmat_address0 = sext_ln36_3_fu_611_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        alnmat_address0 = sext_ln30_1_fu_568_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        alnmat_address0 = sext_ln24_fu_439_p1;
    end else begin
        alnmat_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        alnmat_address1 = alnmat_addr_3_reg_865;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        alnmat_address1 = alnmat_addr_4_reg_806;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        alnmat_address1 = sext_ln87_fu_598_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        alnmat_address1 = sext_ln30_3_fu_573_p1;
    end else begin
        alnmat_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        alnmat_ce0 = 1'b1;
    end else begin
        alnmat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11))) begin
        alnmat_ce1 = 1'b1;
    end else begin
        alnmat_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        alnmat_d0 = select_ln87_1_fu_627_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        alnmat_d0 = alnmat_q1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        alnmat_d0 = 32'd0;
    end else begin
        alnmat_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((icmp_ln31_reg_836 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln23_fu_419_p2 == 1'd0)))) begin
        alnmat_we0 = 1'b1;
    end else begin
        alnmat_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln49_fu_669_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln49_fu_669_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        data_in_address0 = sext_ln14_fu_376_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        data_in_address0 = zext_ln10_fu_351_p1;
    end else begin
        data_in_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        data_in_ce0 = 1'b1;
    end else begin
        data_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        data_out_address0 = sext_ln51_fu_685_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_out_address0 = sext_ln48_fu_658_p1;
    end else begin
        data_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((grp_trace_back_fu_326_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20)))) begin
        data_out_ce0 = 1'b1;
    end else begin
        data_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        data_out_d0 = subseq_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        data_out_d0 = 8'd0;
    end else begin
        data_out_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((grp_trace_back_fu_326_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20)))) begin
        data_out_we0 = 1'b1;
    end else begin
        data_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln28_fu_444_p2 == 1'd0))) begin
        seq0_address0 = zext_ln30_fu_455_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        seq0_address0 = zext_ln10_reg_714;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        seq0_address0 = grp_trace_back_fu_326_seq0_address0;
    end else begin
        seq0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln28_fu_444_p2 == 1'd0)))) begin
        seq0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        seq0_ce0 = grp_trace_back_fu_326_seq0_ce0;
    end else begin
        seq0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        seq0_we0 = 1'b1;
    end else begin
        seq0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        seq1_address0 = zext_ln30_1_fu_525_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        seq1_address0 = zext_ln14_fu_381_p1;
    end else begin
        seq1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state10))) begin
        seq1_ce0 = 1'b1;
    end else begin
        seq1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        seq1_we0 = 1'b1;
    end else begin
        seq1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        subseq_address0 = zext_ln51_fu_680_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        subseq_address0 = grp_trace_back_fu_326_subseq_address0;
    end else begin
        subseq_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        subseq_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        subseq_ce0 = grp_trace_back_fu_326_subseq_ce0;
    end else begin
        subseq_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        subseq_we0 = grp_trace_back_fu_326_subseq_we0;
    end else begin
        subseq_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        trace_address0 = trace_addr_reg_860;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        trace_address0 = grp_trace_back_fu_326_trace_address0;
    end else begin
        trace_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        trace_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        trace_ce0 = grp_trace_back_fu_326_trace_ce0;
    end else begin
        trace_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        trace_we0 = 1'b1;
    end else begin
        trace_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln9_fu_340_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln13_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln22_fu_386_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln23_fu_419_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln28_fu_444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln29_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln31_reg_836 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_trace_back_fu_326_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln49_fu_669_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_fu_371_p2 = (zext_ln13_fu_356_p1 + n);

assign add_ln24_fu_434_p2 = (sub_ln24_reg_745 + trunc_ln24_2_fu_430_p1);

assign add_ln30_1_fu_519_p2 = ($signed(32'd4294967295) + $signed(j_1_reg_293));

assign add_ln30_2_fu_563_p2 = ($signed(sext_ln30_reg_777) + $signed(sext_ln36_2_fu_559_p1));

assign add_ln30_3_fu_538_p2 = (sub_ln36_reg_782 + zext_ln30_4_fu_534_p1);

assign add_ln30_fu_449_p2 = ($signed(32'd4294967295) + $signed(i_3_reg_281));

assign add_ln32_1_fu_617_p2 = (alnmat_q1 + 32'd1);

assign add_ln32_fu_543_p2 = (trunc_ln30_reg_772 + trunc_ln30_1_fu_530_p1);

assign add_ln36_fu_606_p2 = (trunc_ln36_reg_787 + trunc_ln36_1_fu_602_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_trace_back_fu_326_ap_start = grp_trace_back_fu_326_ap_start_reg;

assign i_4_fu_365_p2 = (i_1_reg_247 + 31'd1);

assign i_5_fu_391_p2 = (i_2_reg_259 + 32'd1);

assign i_6_fu_663_p2 = ($signed(i_4_in_reg_317) + $signed(32'd4294967295));

assign i_7_fu_553_p2 = ($signed(i_3_reg_281) + $signed(32'd1));

assign i_fu_345_p2 = (i_0_reg_236 + 31'd1);

assign icmp_ln13_fu_360_p2 = (($signed(zext_ln13_fu_356_p1) < $signed(m)) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_386_p2 = (($signed(i_2_reg_259) > $signed(n)) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_419_p2 = (($signed(j_0_reg_270) > $signed(m)) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_444_p2 = (($signed(i_3_reg_281) > $signed(n)) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_514_p2 = (($signed(j_1_reg_293) > $signed(m)) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_577_p2 = ((seq0_load_reg_792 == seq1_q0) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_634_p2 = ((alnmat_q1 == alnmat_load_1_reg_840) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_639_p2 = ((alnmat_q1 == alnmat_load_3_reg_845) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_669_p2 = (($signed(i_4_in_reg_317) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln87_1_fu_623_p2 = (($signed(alnmat_load_4_reg_871) > $signed(add_ln32_1_reg_877)) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_585_p2 = (($signed(alnmat_q0) > $signed(alnmat_q1)) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_340_p2 = (($signed(zext_ln9_fu_336_p1) < $signed(n)) ? 1'b1 : 1'b0);

assign j_3_fu_675_p2 = ($signed(len_reg_896) - $signed(i_4_in_reg_317));

assign j_4_fu_652_p2 = ($signed(j_1_reg_293) + $signed(32'd1));

assign j_fu_424_p2 = (j_0_reg_270 + 32'd1);

assign select_ln37_fu_644_p3 = ((icmp_ln37_fu_639_p2[0:0] === 1'b1) ? 7'd76 : 7'd68);

assign select_ln87_1_fu_627_p3 = ((icmp_ln87_1_fu_623_p2[0:0] === 1'b1) ? alnmat_load_4_reg_871 : add_ln32_1_reg_877);

assign select_ln87_fu_591_p3 = ((icmp_ln87_fu_585_p2[0:0] === 1'b1) ? add_ln30_2_reg_821 : sext_ln30_2_fu_582_p1);

assign sext_ln14_fu_376_p1 = $signed(add_ln14_fu_371_p2);

assign sext_ln24_2_cast_fu_405_p3 = {{trunc_ln24_1_fu_401_p1}, {3'd0}};

assign sext_ln24_fu_439_p1 = $signed(add_ln24_fu_434_p2);

assign sext_ln30_1_fu_568_p1 = add_ln30_2_fu_563_p2;

assign sext_ln30_2_fu_582_p1 = add_ln30_3_reg_800;

assign sext_ln30_3_fu_573_p1 = add_ln30_3_reg_800;

assign sext_ln30_fu_484_p1 = sub_ln30_fu_474_p2;

assign sext_ln32_fu_548_p1 = $signed(add_ln32_fu_543_p2);

assign sext_ln36_1_fu_500_p1 = $signed(tmp_2_fu_492_p3);

assign sext_ln36_2_fu_559_p1 = j_1_reg_293;

assign sext_ln36_3_fu_611_p1 = $signed(add_ln36_fu_606_p2);

assign sext_ln36_fu_488_p1 = i_3_reg_281;

assign sext_ln48_fu_658_p0 = grp_trace_back_fu_326_ap_return;

assign sext_ln48_fu_658_p1 = sext_ln48_fu_658_p0;

assign sext_ln51_fu_685_p1 = $signed(j_3_reg_910);

assign sext_ln87_fu_598_p1 = $signed(select_ln87_reg_850);

assign sub_ln24_fu_413_p2 = (sext_ln24_2_cast_fu_405_p3 - trunc_ln24_fu_397_p1);

assign sub_ln30_fu_474_p2 = (zext_ln30_3_fu_470_p1 - zext_ln30_2_fu_460_p1);

assign sub_ln36_fu_504_p2 = ($signed(sext_ln36_1_fu_500_p1) - $signed(sext_ln36_fu_488_p1));

assign tmp_1_fu_463_p3 = {{add_ln30_reg_761}, {3'd0}};

assign tmp_2_fu_492_p3 = {{i_3_reg_281}, {3'd0}};

assign trunc_ln24_1_fu_401_p1 = i_2_reg_259[3:0];

assign trunc_ln24_2_fu_430_p1 = j_0_reg_270[6:0];

assign trunc_ln24_fu_397_p1 = i_2_reg_259[6:0];

assign trunc_ln30_1_fu_530_p1 = add_ln30_1_fu_519_p2[6:0];

assign trunc_ln30_fu_480_p1 = sub_ln30_fu_474_p2[6:0];

assign trunc_ln36_1_fu_602_p1 = j_1_reg_293[6:0];

assign trunc_ln36_fu_510_p1 = sub_ln36_fu_504_p2[6:0];

assign zext_ln10_fu_351_p1 = i_0_reg_236;

assign zext_ln13_fu_356_p1 = i_1_reg_247;

assign zext_ln14_fu_381_p1 = i_1_reg_247;

assign zext_ln30_1_fu_525_p1 = add_ln30_1_fu_519_p2;

assign zext_ln30_2_fu_460_p1 = add_ln30_reg_761;

assign zext_ln30_3_fu_470_p1 = tmp_1_fu_463_p3;

assign zext_ln30_4_fu_534_p1 = add_ln30_1_fu_519_p2;

assign zext_ln30_fu_455_p1 = add_ln30_fu_449_p2;

assign zext_ln51_fu_680_p1 = i_6_fu_663_p2;

assign zext_ln9_fu_336_p1 = i_0_reg_236;

always @ (posedge ap_clk) begin
    zext_ln10_reg_714[63:31] <= 33'b000000000000000000000000000000000;
    storemerge_reg_305[2:1] <= 2'b10;
    storemerge_reg_305[6:5] <= 2'b10;
end

endmodule //lcs
